<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAXEAAAD6CAYAAABXh3cLAAABg2lDQ1BJQ0MgcHJvZmlsZQAAKM+VkTlI
        A0EYhT+jEhVFxBQiFltEKwVREUuJoggKIUbwKtzdmETIbsJuxMZSsBUsPBqvwsZaWwtbQRA8QGxsrRRt
        RNZ/NoEEIYIDw3y8mfeYeQOBw4xpuTW9YNl5JzYe0Wbn5rXgC0FCtFDPkG66uanpsTgVx+cdVWq97VFZ
        /G80JZZdE6o04WEz5+SFl4QH1/I5xbvCITOtJ4TPhLsduaDwg9KNAr8qTvkcUJkhJx4bEQ4Ja6kyNsrY
        TDuW8IBwOGHZkh+YLXBC8bpiK7NqFu+pXti4bM9MK11mB+NMMEUUDYNVVsiQp0dWWxSXmOxHKvjbfX9U
        XIa4VjDFMUoWC933o/7gd7dusr+vkNQYgdpnz3vvhOA2fG953teR530fQ/UTXNolf/YQhj5E3ypp4QNo
        3oDzq5Jm7MDFJrQ95nRH96VqmYFkEt5O5ZvmoPUGGhYKvRX3ObmHuHQ1eQ17+9CVkuzFCu+uK+/tzzN+
        f0R+AJfocraevIg9AAAACXBIWXMAAC4jAAAuIwF4pT92AAAAB3RJTUUH4wcUERcRQ4iydwAAABl0RVh0
        Q29tbWVudABDcmVhdGVkIHdpdGggR0lNUFeBDhcAABhMSURBVHhe7d3b0xRFnsZx/wFvvfLKCy+88MIY
        Y4w1DF0jDIdhHcYwZFxXF1dHBVYdwBHFETkpwogKiigo4gkV5CgqB4/gWVTA8wEQAeUs8vLKSTB3n9pq
        t6PI6s6qru63ft3fT0RGOENXdr3dVU9nZWZlHeMAAGYR4gBgGCEOAIYR4gBgGCEOAIYR4gBgGCEOAIYR
        4gBgGCEOAIYR4gBgGCEOAIYR4gBgGCEOAIYR4gBgGCEOAIYR4gBgGCEOAIYR4gBgGCEOAIYR4gBgGCEO
        AIYR4gBgGCEOAIYR4gBgGCEOAIYR4gBgGCEOAIYR4gBgGCEOAIYR4gBgGCEOAIYR4gBgGCEOAIYR4gBg
        GCEOAIYR4gBgGCEOAIYR4gBgGCEOAIYR4gBgGCEOAIYR4gBgGCEOAIYR4gBgGCEOAIYR4gBgGCEOAIYR
        4gBgGCEOAIYR4gBgGCEOAIYR4gBgGCEOAIYR4gBgGCEOAIYR4gBgGCEOAIYR4gBgGCEOAIYR4gBgGCEO
        AIYR4gBgGCEOAIYR4gBgGCEOAIYR4gBgGCEOAIYR4gBgGCEOAIYR4gBgGCEOAIYR4gBgGCEOAIYR4gBg
        GCEOAIYR4gBgGCEOAIYR4gBgGCEOAIYR4gBgGCEOAIYR4gBgGCEOAIYR4gBgGCEOAIYR4gBgGCEOAIYR
        4gBgGCEOAIYR4gBgGCEOAIYR4gBgGCEOAIYR4gBQZeeu3e69lWvcjCfmu5tG3Of6DRzjzvjTEHfmn693
        /3HVKHfrbQ+4R2cucCs//MR1d/8cb9VzCHEA+F8bvtvsJk2Z6U48c2BwUbBv2bI9rqFnEOIAOtrhw4fd
        3AXLvCEdUla8uTKuqWcQ4gA61sGDh9zocdO84Rxa3n1/dVxbzyDEAXSkI0eOuIlTnvQGc5byzdoNcY09
        gxAH0JFeXLrcG8pZy097uuIaewYhjo7zyCOPuGOOOeao8ssvv8SvQLvbuetH97s//M0bylnKf/YfHdfY
        cwhxdBxCHJOnPu0N5axl3sKX4hp7DiGOjkOId7bdu/e4k/71v72hnCyaI/7+Bx+7PXu63OHDR9z+/Qfc
        5u+3utdXvOemPzbPdXV1x7X2HEK8ytq1a70n9/vvvx+/Au2AEO9si5et8AZ2slw9aJzbW4KbeeohxKsQ
        4p2BEO9sA4aM94Z2sqxbvzHeotwI8SqEeGcgxDuXukV8gZ0sw0ZOjrcoP0K8CiHeGQjxzrVqzefe0E6W
        15a/G29RfoR4FUK8MxDinWv23MXe0E6WTZu3xFuUHyFehRDvDIR45xo+Zoo3tKuL5o9rPRUrCPEqhHhn
        IMQ7k6YI/v6Pg7zBXV1uGX1/vIUNhHgVQrwzEOKdaevWHd7QTpZZcxbHW9hAiFchxDsDId7+XnrlrUJu
        q0+Wp599IX6H8jAR4lu2bHFvv/22e/jhh93QoUPdpZde6k4//XR30kknuQsuuMBde+217s4773SLFi1y
        a9ascT/++GO8ZTatDPFDhw6577//3n344YfuhRdeiP62W2+91fXr18/17t3bnXzyye6EE05w55xzjrv4
        4ovdoEGD3P333++ef/559/HHH7sDBw7ENbXWwYMHo8/4iSeecDfeeGO0f9pP7bO+h8mTJ0ff1e7du+Mt
        muenn35yb775ZvSeV155pTvttNN+2xf970mTJrklS5a4DRs2uF9//TXeqmdCXJ/HW2+95aZMmeIGDBjg
        zjjjDHf88ce7s88+2w0ePNg9+uij0efaTj8k27Ztc6+//nr0N1933XW/HSs6ts8///zoeH/qqafc6tWr
        3f79++OtGvfDlm3eAC6iaI552ZQ2xHUwv/fee9EB7jvh6pXLL7/cLViwIPoBSKMQ8G3baNm1a1f8DkdT
        COtvOu6447zbhpYTTzzR3XvvvW7z5s1xzfnoB8pX/9dffx2/4v90d3e7OXPmREHpe32yKKCefvrpaLui
        /fDDD1FAH3vssd739pW+ffu6F198MdqfIkI89HPTvk6cODF4X88991y3YsWKaJnUvEL3rUKDeF988YV7
        5pln3E033RSFrY5PHWN9+vSJwlb7FOqTTz6JGlu+fUgrapDph6zWuRNK3SG+AC6i6HFtZVPKEFcwqbXi
        +7LzlJEjR0atgqSeCPH+/ft7t2mk6ODP2zKvd8LrimHx4sXB4Z0sF110kdu+vZjHVylk586dmym8k6XS
        CvT9W5EhrmNr+vTpufd1zJgx7uef893yHRri+m7VUlZQ+15fXXS1U4+ugG+77Tbv9qFFPxxLly5t6Ees
        /+CwOzLzlKmPPBu/S3mULsTVvdBoK9VX3n336Mn77RLiKrfccovbt29f/C7hap3w+uG75pprvP+epahl
        12gLSy1o/Y2++osqRYX4p59+GnWT+P49S1H3VJ4gDwlxtbzVded7na/UC/H169dH37Nv2zxF3aN5GiYH
        Dhz0hm9RZfmb5RsfK1WIq6+3GQGu0u4hrqIrjuq+3xBpJ/xDDz0UtVp9/5an5Nm3Cv04aUzAV2+RpYgQ
        L/qH5vbbby/sO1WIa0zj8ccf9/57rVIrxBXgRR4rlaJjRvubxbbtO73hW1TZsTPfeFszlSbE9+7d6846
        6yzvl6lLUvWBfvDBB27r1q3RL7QObJ10e/bscd9++210WXjXXXdFAye+Osoa4moNqY9WfY5qHe3YsSNq
        felvU1+l/lv1bdq0KfobNEik/ubqOqqLTuAs0k54X9GJqn3Vj60unbWPKl1dXW7dunVRV0etk1lXWVnp
        svqOO+7w1qei71sBs2rVquizU+BrGx0jGkz85ptv3CuvvOJGjBhRt2ujiBD3FQ2+z58/PwpRHa/6XhVO
        +gw1qKc+c992lVLUd6pzZODAgd5/q1fSQlx/Q62rDg3KL1y4MDpHdb7pM9Ygpo5pDeROnTq15vGsf89C
        y8T6wreIcsdd0+N3KZfShLhmO/i+xCFDhnj7s9PoJF6+fHk0g6W6Hl+IJ7VidopmdDzwwANRoCn88tCJ
        M3z4cO++nnfeeZnuNgsJo1NOOSWa+RPSXaOT84orrvDWo1ZqVgpgX10qCuYsx4ZCRAPLaZf9RYf4JZdc
        4lauXBnUv6uAT+ub1v+fpWshZN+yFl+IqyF18803e1+vYNZAsvrd69F3qFa3rx6VLOffvn373V+uGOEN
        4UbKv/91pNu+o7EuwWYpRYjr5NGUweSXp0GxvIM7OnH0S6+WgOoqS4gXRSeH+kx9+/vll1/Gr6qv3gk/
        Y8aMzD82GshMa13t3LkzflV9aklr1oKvHoVK3sGvZs5OUdHg3KuvvpqpPtGUU/1g+upctmxZ/Kr6soS4
        pmNq1pGOmUpLuXIlo+/xo48+irrWVJJ0Tvnq1Hevq7Us9L5pVyT60c0z3lOhv+eMPw3xhnN1GTuhnC3t
        ekoR4rrk9X15L73U+KOPdDDOmjUrmq5Yj7Wbfb766ivv/j733HPxK+pLO+F1cn/22Wfxq7KbNm2at94s
        XSppfbejR4/OdLWR1MwQV9+9uvzy0rx3X72a9x4qJMT1/WreetYfmgp9/pUGUrJkmY5YTfuSNvahVn1e
        27aF3am58PlX4i1sKUWIK2B9X9znn38ev6I1rIW4Whi+KxiNH4RKO+HVP98I9fX66p09e3b8itrU+ve1
        5tUHrr7vRrRynnhW2oe0cAy9J6BWiGtcYN68eZm6Z3zU0vbVr/nhea+QZOPGjd56e/XqlfuH+6PVn3lD
        O1nWfNzYMd9TShHiaf2e6g5pJWshLr4pgDqRQjUrjNRt4qv37rvvjl9RW9oxEfojUEuZQ1zU6vTVHdoa
        Tds3zY/XVW8RdKOZ7z00vbJRml7oqztvo27ugmXe0E6WMs48CVGKEE+7hNQtua1kMcR9A0KaAROqWWGk
        QPTVq7v/QmgA2Le9+o0bVfYQ10wkX9333HNP/Ira0vYty1hJLfqcfH33ml2W5TNMo5lGybpV8ubBqDum
        ekO7upx9/t9zT4HtaaUIcR1cvi9NA0Q6oFulLCGuQUuN2CsQNLvh5ZdfjlqgmtWi6XY33HBDNPtG62/4
        9ldLDoRqZhjpFvJkvbpyqEeD2cntVLL8ONVS9hBXmPgGdC+88ML4FbU1c9/ku+++89avcZAiaAqir/6r
        rroqfkW4dh/UlFKEuEae02YzaN6xQqzRPrwQPRXimiOvsNZMEB2ojdxWrlKWENdgXLLekH3Teye3U9FA
        ZxHKHuKSNsAXMlur2fumBc589asLrCiXXXbZUfXrvMh880/goOaCRTYHNaUUIS6awpT80qrLqaeeGr1G
        sxtq3UzTiFaHuAYPJ0yY0HBoJ0tZQlwr1yXrDdk3zfNPbqeibrciWAhxXXX56g9Zh6bZ+6abunz1F9Vd
        I1qx0/cetRa08wkd1FxtdFBTShPiCua0ObK+ormjGgDRzRtaNU03wDSqVSGuKWjNXAekLCHu69cO2TfN
        W05up1LUoJyFENcKkL76Q7oXm71vDz74oLf+rAFby7PPPut9j6x/Q/CgZklv5AlRmhAXzUZpZO0U9Rk+
        +eST0fzpPIMUrQhxXUmk3cBSVLEe4mlXZUWNj1gIcd2m76s/5Ies2fs2btw4b/1FXiFrjX3fe2jqahbt
        PqgppQpx0SVZ2lKhWYrCIusUxWaHuALcV7+vaD0KzeRQP7lueVdXgv4erVGilrzW4FD/oG92ivUQv+++
        +47aTqWoJW0thHjaNMOQKXzN3re0W+Q1tlMU3fHqew+NHYUKHdS8/c6H4y1sKl2IiwY69UtcxHKe6lsL
        Wb9Bmhnimm1SrwWuBfn1Xlm6htoxxNNuvy6qpWchxLVolK/+kLnS7RDir732mvc9soR46KDm/EUvx1vY
        VMoQr1D46tZvtUa1EpzvSw0pWqg+5C6yZoZ42g0MKpo6p2lbebRjiOtRdcntVBq5nb2a5T7xMnSnpK0q
        WbbulNBBzVVrWntneNFKHeJJOkj0Jaq/UOss+245Tyshd7s1K8TVsvbVq6Kug0amT7ZjiDcyqBfCQoin
        jQuEDB42e9/SZs7oUXRFSRvY1HhXqNBBzbKuThjKVIgnaTBCrTP1F48dO7bmVD09XqzeSmjNCvE33njD
        W69a4FmCw6cdQ1wLeCW3U2l0PZcKCyHu++xUQlbza/a+pU0xLHKtI61S6XuPLDNgQgc1jxyxO6gppkM8
        SS113Zrs+/JVtKxmLc0KcT0D01dvyMqK9bRjiKctw6D540Uoe4hroSfdrZysuyx3bGr1Q1/9WZbLrSf5
        PIBKCb1q7ZRBTWmrEBe1zsePH+89APQ071rSQvydd96JX5FP2sNji5jb3o4hrqfAJLdTmTlzZvyKxpQ9
        xNUt4as77ek6Sc0O8Q0bNnjrD92/enS14atfDxsJ1SmDmtJ2IS6ahuc7COodZGnhkXd95AqtdeKrN3TW
        TC3tGOJpa2dkOYlrKXuIp3UnhTYmmh3i+px8j+HTzXpFLI+hGSjJulWy/Ih/uOpTb2gni/VBTWnLEE9b
        QEnP4KxF/W2+7ZYuXRq/Ip+0uzOLOODbMcQl7RFvja4lLmUOcXUD9O3b96h6Nd6jewNCNDvEJW0aaJaH
        fqRJu3LN8pCSThnUlLYM8e7ubu9BoOd41pI2i0QnfSPS1l4u4uYV3w9EO4S4bnBKbquiQbVGlTnE9TBj
        X731GiDVWhHiuvHM9x5a9CzL55iU1qWpZTay1BsyqHnmn683P6gppQhxhatWQGvky6+W9ri3equs6f19
        qynqgbeN3Jabdgt1I900ulsz7fFl7RDi+oFLbquiy/jQFqmPBrfTlvDt6RBXI0ILvfnqzbJuTCtCXJ+V
        74pBJe+j1NS9qFU8fXVqjaRQoYOat/3z6OeGWlSKEK/MidXyk/qFb+T5ifoC0y7HQlq+af3XjTxvMu1H
        RSeB+n+zUp9/2sGu0g4hLmlPUtdyBFl/8HU3Yb2VMnsyxBXgaTMyxowZE78qTCtCXNRH73sflZAHk1dT
        gGuasK8uPWwiywPTgwc1n2v8Gb5lUKoQrxTdnalfcz3tPAt90WnzS0OfKJN2k4HWc9HTwPNQOKStB6MT
        NPR2Zd26n9YXWV3aJcTTBppVdNdgSItcP5I6ltJauNWliBBXX77uC8jy46yGS9odyZpqmLXbrVUhrgaT
        7ztWUR++nuUZsv63xqK05ISvHpWsPwidNKgppQzx6qKWsUbrtfCPQkwnhw4eFf23DnA9tFVdC2lL2erh
        uqG3bKdN71JRv5y6QLQfOjjVxaIWhOana//0A6CrCd/tx2lza1VUr7pc1MJWoCtM9PdpqpUeR1a5mcm3
        ra+0S4iLllxI1lEp6haZNWtW9Lkp0HUFp89OrVodE5qfHxLelVJEiFeKun3UoNDrdKepxml0rOh71X8r
        uNT/XSu8VPJMb21ViIuepaqWsu/9VNR40bGtH2R9R/qMNaBfuft6ypQpNVcu1dpHWQUPam63P6gppQ/x
        IkrWhwmodeyrJ7T4QlwBM3z4cO/r85Zhw4Z5u1XaKcQVeGlPf89TtFSD74lDKkWGeBEl7yBuK0NcNBjZ
        jOWVdb5kfZKPdNKgprR9iKsFnJVacmmDXyHFF+KiVrYGSX3bZCm6VNXViX4Y2nWKYTVdRfXq1euourIW
        PfJMLcdmzk4pquj7zavVIS4K8iJWHa0U3bCXZ7xIVzohg5pjxrfHoKaUIsQ3btzoJk2aVOhjygYMGBBd
        wuW1fv1674N+Q0paiIsuKdWC9m0XUvSgYd0xV9EJIS6aHz5w4MCj6gsp6lfWJX3l5qpmhnjaszFDi36s
        1BXUiJ4IcdFxP2rUKO97hxZ1fS5evDgK4zy2Bg5qzlvYHoOaUooQr9BAphaDb+TRZddff330INcsJ2Qa
        tcjTHlBQq9QKcdG+aZ2JLK39oUOHRtPjkgd3p4S4KIS1RGloP7emi6pPPTlA3ux54hoz0Xtkedygunm0
        hnjIAlf19FSIi8aJNFCbNssrreiHVt+VrpQaETqoqWVq20WpQryauh60KtqSJUuim2UUzv369Ysu2XRy
        ajBQg4gaGNI8cwV3UetNJ2nwVHPM9VBjzT7QQI72QSGsPmld+s2ePTsaRdeAVeiccp2wOuE0eKN6VJ8O
        5t69e0etzqlTp0aDX1lnJ7Q7XWbrc5s2bVp0xaUVKjU4ps9PVyr6/zUgGDrrJ4+QoFR/rgJNzwxVC1Vd
        adpHHTs6jnVMP/bYY9EAX56+37LT+aiHO2iAV99L5dxV/3mfPn2ixpoep6jGSRE/XhI6qLlte2M/FmVS
        2hAHyqwnW7tIN3Lsg97Qri7tNKgphDiQAyFePocO/eJ+94e/eYO7urTToKYQ4kAOhHj5rF33nTe0k+WF
        Ja/HW7QHQhzIgRAvn5mznveGdrKsXZ/vebZlRYgDORDi5bJnT5f7l3+rPz/8938c9NtU03ZBiAM5EOLl
        oamh4+56xBvayfLQjDnxVu2DEAdyIMRbr6trr9uyZbs7ePBQNI1337797ouv1rlhIyd7A9tXvln7/zfK
        tQtCHMiBEG+tw4ePuKsHjfMGc2jpP3h8Q88FKCtCHMiBEG+tL79e7w3mLOWzz8MfrGEJIQ7kQIi31pz5
        YXdippV/TpwR19R+CHEgB0K8tW4edb83nEPKX68d6/Z2hz8ZyBpCHECpqR87ZPqgr/T9r1vb5uEPaQhx
        AKX287593oCuV8ZOmO66urrjWtoXIQ6g1PTwk3MuuMEb1L7y939MjJ6f2U6LXNVCiAMove07dkVrnuim
        nkuuHhWtRKjFrv5yxQg3eNjdbtKUme615e+6TZt/iLfoHIQ4ABhGiAOAYYQ4ABhGiAOAYYQ4ABhGiAOA
        YYQ4ABhGiAOAYYQ4ABhGiAOAYYQ4ABhGiAOAYYQ4ABhGiAOAYYQ4ABhGiAOAYYQ4ABhGiAOAYYQ4ABhG
        iAOAYYQ4ABhGiAOAYYQ4ABhGiAOAYYQ4ABhGiAOAYYQ4ABhGiAOAYYQ4ABhGiAOAYYQ4ABhGiAOAYYQ4
        ABhGiAOAYYQ4ABhGiAOAYYQ4ABhGiAOAYYQ4ABhGiAOAYYQ4ABhGiAOAYYQ4ABhGiAOAYYQ4ABhGiAOA
        YYQ4ABhGiAOAYYQ4ABhGiAOAYYQ4ABhGiAOAYYQ4ABhGiAOAYYQ4ABhGiAOAYYQ4ABhGiAOAYYQ4ABhG
        iAOAYYQ4ABhGiAOAYYQ4ABhGiAOAYYQ4ABhGiAOAYYQ4ABhGiAOAYYQ4ABhGiAOAYYQ4ABhGiAOAYYQ4
        ABhGiAOAYYQ4ABhGiAOAYYQ4ABhGiAOAYYQ4ABhGiAOAYYQ4ABhGiAOAYYQ4ABhGiAOAYYQ4ABhGiAOA
        YYQ4ABhGiAOAWc79D2wmccQIKIVYAAAAAElFTkSuQmCC
</value>
  </data>
</root>